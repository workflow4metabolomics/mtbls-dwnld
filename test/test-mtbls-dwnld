#!/bin/bash
# vi: fdm=marker

# Constants {{{1
################################################################

PROG_NAME=$(basename $0)
PROG_PATH=$(dirname $0)
OUTPUT_PATH=$PROG_PATH/outputs
TEST_MTBLS_DWNLD_ASPERA_PUBLIC_TOKEN=Xz68YfDe
[[ -z $(which ascp) ]] || ASCP=ascp
WGET=wget

[[ -d $OUTPUT_PATH ]] || mkdir $OUTPUT_PATH

# Error {{{1
################################################################

function error {

	local msg=$1

	echo "ERROR: $msg" >&2

	exit 1
}

# Test downloading {{{1
################################################################

function test_downloading {

	method=$1
	study_path=$2
	token=$3
	private=$4
	study=$(basename $study_path)

	# Remove previously downloaded directory
	rm -rf $study

	# Download
	options=-gM
	[[ $method == $ASCP ]] && options+=" -a"
	[[ -n $private ]] && options+=" -p"
	[[ -n $token ]] && options+=" -t $token"
	$PROG_PATH/../mtbls-dwnld $options $study_path || error "Download of $study failed !"

	# Test downloaded directory
	[[ -d $study ]] || error "Download of study $study with $method method failed !"
	[[ -f $study/i_Investigation.txt ]] || error "Download of study $study with $method method failed ! No investigation file found."
}

# Test private download {{{1
################################################################

function test_private_download {

	method=$1
	study=$2

	# Get path
	path=TEST_MTBLS_DWNLD_${method}_${study}_PRIVATE_PATH
	path=$(echo $path | tr '[:lower:]' '[:upper:]')
	if [[ -z "${!path}" ]] ; then
		echo "No path to test private download of $study with method $method. Please set environment variable $path." >&2
		return
	fi

	# Get token
	token=TEST_MTBLS_DWNLD_${method}_${study}_PRIVATE_TOKEN
	token=$(echo $token | tr '[:lower:]' '[:upper:]')
	if [[ -z "${!token}" ]] ; then
		echo "No token to test private download of $study with method $method. Please set environment variable $token." >&2
		return
	fi

	test_downloading $method "${!path}" "${!token}" 1
}

# Test aspera private download {{{1
################################################################

function test_aspera_private_download {
	test_private_download $ASCP MTBLS1
}

# MAIN {{{1
################################################################


# Small studies to test:
# MTBLS164    2.30MB
# MTBLS116    5.72MB
# MTBLS77     6.70MB
# MTBLS342    8.09MB
# MTBLS361    23.32MB
# MTBLS174    3.51MB

# List methods
methods="$WGET $ASCP"
if [[ -z $ASCP ]] ; then
	echo "ascp not installed => no tests with Aspera download server." >&2
fi

test_downloading $WGET /studies/public/MTBLS164
test_private_download $WGET MTBLS353
if [[ -n $ASCP ]] ; then
	test_downloading $ASCP MTBLS164 # Test without specifying public token.
	test_downloading $ASCP MTBLS164 "$TEST_MTBLS_DWNLD_ASPERA_PUBLIC_TOKEN" # Test with explicit public token.
fi

# ASCP PRIVATE DOWNLOAD FAILING
#    pierrick@schroeder:mtbls-dwnld$ ascp --policy=fair -T -l 1g mtblight@ah01.ebi.ac.uk:/prod/mtbls1-4ZWHUHHlKR .
#    ascp: Failed to open TCP connection for SSH, exiting.
#    Session Stop  (Error: Failed to open TCP connection for SSH)
#[[ -z $ASCP ]] || test_aspera_private_download
